<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>smallfang</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://smallfang.tk/"/>
  <updated>2019-05-01T07:45:14.606Z</updated>
  <id>http://smallfang.tk/</id>
  
  <author>
    <name>smallfang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>指针</title>
    <link href="http://smallfang.tk/2019/05/01/%E6%8C%87%E9%92%88/"/>
    <id>http://smallfang.tk/2019/05/01/指针/</id>
    <published>2019-05-01T06:56:52.000Z</published>
    <updated>2019-05-01T07:45:14.606Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>…</p><a id="more"></a><p>终究是更新了</p><h1 id="定义与赋值"><a href="#定义与赋值" class="headerlink" title="定义与赋值"></a>定义与赋值</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>类型(int,char,bool…) * 变量名;</p><p>举个例子:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *p=<span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure></p><p>实际上,指针变量p指向的是一个<strong>地址</strong>.NULL表示空.</p><h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h2><p>首先,先让我们举个例子.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p=&amp;a;</span><br></pre></td></tr></table></figure><p>其中 &amp; 代表 a 的地址,这句话的意义就是将p指向变量a.</p><hr><p><strong>!注意!</strong></p><p>变量a与*p的<strong>类型</strong>必须保证一致.</p><hr><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> *p=&amp;a;</span><br></pre></td></tr></table></figure><h1 id="引用与运算"><a href="#引用与运算" class="headerlink" title="引用与运算"></a>引用与运算</h1><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>下表为指针变量与普通变量对比表</p><table><thead><tr><th style="text-align:right">指针变量</th><th style="text-align:right">普通变量</th></tr></thead><tbody><tr><td style="text-align:right">p</td><td style="text-align:right">&amp;a</td></tr><tr><td style="text-align:right">*p</td><td style="text-align:right">a</td></tr><tr><td style="text-align:right">*p=5</td><td style="text-align:right">a=5</td></tr></tbody></table><h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><p>+,-运算<br><strong>例题1</strong> 输入N个整数,使用指针变量访问输出.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">101</span>],n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> *p=&amp;a[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;*p&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输入</strong><br>4<br>2 1 6 0</p><p><strong>输出</strong><br>2 1 6 0</p><p>p++ 是用来指向下一个指针地址</p><p>p - - 是用来指向上一个指针地址</p><p><strong>They are not same</strong></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>无类型指针</p><h1 id="指针与数组"><a href="#指针与数组" class="headerlink" title="指针与数组"></a>指针与数组</h1><h2 id="指针用作数组名"><a href="#指针用作数组名" class="headerlink" title="指针用作数组名"></a>指针用作数组名</h2><p>关于动态数组<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *a=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br></pre></td></tr></table></figure></p><p>代表我要申请多个变量空间,这也就是传说中的动态数组<del>(其中一种)</del>.</p><p>动态数组的优点:在oi中,大数据可能超时空的情况是比较纠结的事,用小数组只能得部分分,大数据可能爆空间.使用动态数组,可以确保在确定小数据没问题的基础上,尽量满足大数据的需求.</p><p>我们可以将指针指向数组,然后我们可以使用指针代替数组。</p><h1 id="指针与字符串"><a href="#指针与字符串" class="headerlink" title="指针与字符串"></a>指针与字符串</h1><h2 id="字符串的表现形式"><a href="#字符串的表现形式" class="headerlink" title="字符串的表现形式"></a>字符串的表现形式</h2><p>在c++中我们可以使用两种方法访问指针</p><p><strong>法1</strong><br>使用字符数组存放一个字符串，然后输出此字符串<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> str[]=<span class="string">"STRING"</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;str;</span><br></pre></td></tr></table></figure></p><p><strong>法2</strong><br>用字符指针指向一个字符串,可以不定义字符数组而定一个字符指针.用字符指针指向字符串中的字符.<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> * str=<span class="string">"STRING"</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;str;</span><br></pre></td></tr></table></figure></p><h2 id="字符串指针作函数参数"><a href="#字符串指针作函数参数" class="headerlink" title="字符串指针作函数参数"></a>字符串指针作函数参数</h2><p>将一个字符串从一个函数传递到另外一个函数,可以用地址传递的方法,即用字符数组名做参数或用指向字符的指针变量做参数，在被调用的函数中可以被改变字符串内容，在主调函数中可以得到得到改变了的字符串。</p><p><strong>例题2</strong> 说有一个100长度zfc，知道基本的资格和成绩，也将作为奋斗组成为最心动的是重组后的字符串。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;…&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://smallfang.tk/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="指针" scheme="http://smallfang.tk/tags/%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯-T3</title>
    <link href="http://smallfang.tk/2019/04/01/%E8%93%9D%E6%A1%A5%E6%9D%AF-T3/"/>
    <id>http://smallfang.tk/2019/04/01/蓝桥杯-T3/</id>
    <published>2019-04-01T13:25:25.000Z</published>
    <updated>2019-04-01T13:57:31.004Z</updated>
    
    <content type="html"><![CDATA[<p>最近,编程的状态在慢慢的回来…所以说可能会恢复博客不定期更新(t<br>博客也会写的高产似那啥 (<del>母猪</del>)</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>第10届蓝桥杯c++组(dao)(shu)第1名非我莫属<br>一共5道题,做了2道,真凉了<br>下面是我赛后对T3重构代码,并且(ben)已(ji)经AC的题目</p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>~</p><h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>啊…以后再来填坑。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近,编程的状态在慢慢的回来…所以说可能会恢复博客不定期更新(t&lt;br&gt;博客也会写的高产似那啥 (&lt;del&gt;母猪&lt;/del&gt;)&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>后效记忆深搜</title>
    <link href="http://smallfang.tk/2019/03/31/%E5%90%8E%E6%95%88%E8%AE%B0%E5%BF%86%E6%B7%B1%E6%90%9C/"/>
    <id>http://smallfang.tk/2019/03/31/后效记忆深搜/</id>
    <published>2019-03-31T00:44:48.000Z</published>
    <updated>2019-04-03T13:29:39.530Z</updated>
    
    <content type="html"><![CDATA[<p>hello ! 这里是smallfang !</p><a id="more"></a><hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有是很久没有更博客了,今天来分享一下记忆化深搜.希望大家喜欢.(4.3日来填坑)</p><h1 id="关于后效记忆深搜"><a href="#关于后效记忆深搜" class="headerlink" title="关于后效记忆深搜"></a>关于后效记忆深搜</h1><p>…</p><p>也应该是老算法,只不过今天拿来分享分享.</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>百度即可~</p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>洛谷 最大食物链计数</p><h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> r[<span class="number">6000</span>];</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">6000</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">6000</span>];</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">p_t</span>[<span class="number">550000</span>];</span><br><span class="line"><span class="keyword">int</span> next[<span class="number">550000</span>];</span><br><span class="line"><span class="keyword">int</span> t[<span class="number">550000</span>];</span><br><span class="line"><span class="keyword">int</span> co=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    co++;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">p_t</span>[co]=y;</span><br><span class="line">    next[co]=t[x];</span><br><span class="line">    t[x]=co;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!c[x])<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(f[x])<span class="keyword">return</span> f[x];</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=t[x];i;i=next[i])</span><br><span class="line">    &#123;</span><br><span class="line">        sum=(sum+dfs(<span class="keyword">p_t</span>[i]))%<span class="number">80112002</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    f[x]=sum%<span class="number">80112002</span>;</span><br><span class="line">    <span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        c[x]++;</span><br><span class="line">        r[y]++;</span><br><span class="line">        add(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(!r[i])ans=(ans+dfs(i))%<span class="number">80112002</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hello ! 这里是smallfang !&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://smallfang.tk/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>拓扑排序,逻辑开关</title>
    <link href="http://smallfang.tk/2019/03/09/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F-%E9%80%BB%E8%BE%91%E5%BC%80%E5%85%B3/"/>
    <id>http://smallfang.tk/2019/03/09/拓扑排序-逻辑开关/</id>
    <published>2019-03-09T13:36:19.000Z</published>
    <updated>2019-03-09T13:55:00.244Z</updated>
    
    <content type="html"><![CDATA[<p>是我,还没弃坑…</p><a id="more"></a><hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在正文开始之前,我先来宣传一下我们工作室,<a href="http://gugug.cn." target="_blank" rel="noopener">这里是工作室官网</a><br>当然,在没备案之前就是得加个.</p><h1 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h1><p>是的,这个名字很怪.我们可以找一个直观的名字去描述拓扑排序,这个名字叫做不包含强连通子图.类似于不能出现1是2的父亲,2是1的父亲<del>(这是一个很奇葩的例子)</del>那么这种含有强连通子图,那么就倒霉了,他就不叫拓扑图,那么就无法用来dp了(这个后面会说)</p><p>那么如果没有类似于强连通子图(连通图),那么就恭喜你,这道题就可以使用dp来进行解决了,如果你的dp不熟悉,那么也可以另找退路,类似于记忆化搜索解决(这个后面会说到).</p><h2 id="拓扑作用"><a href="#拓扑作用" class="headerlink" title="拓扑作用"></a>拓扑作用</h2><p>如果你想使用dp解决在图中的题目,你必须保证此图是拓扑图.</p><p>如果无法保证该图是拓扑图,那么也要恭喜你,你排除了一个无法使用的算法.</p><p>大概,以上就是拓扑了.<br>下面就是一座崭新的世界</p><h1 id="逻辑开关"><a href="#逻辑开关" class="headerlink" title="逻辑开关"></a>逻辑开关</h1><p>首先,我先上一段代码:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans=ans+x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>很简洁但是实际上看起来一点都不高大上,在下面,我提供一种简单的算法:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ans=ans+(x&gt;<span class="number">5</span>)*x;</span><br></pre></td></tr></table></figure></p><p>是的,我相信你已经看懂了.</p><p>以上是我归来的第一篇内容,也是一篇纪念,以后可以回来再复习,也希望给大家带来参考.<br>2019.3.9</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;是我,还没弃坑…&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>家谱</title>
    <link href="http://smallfang.tk/2019/03/09/%E5%AE%B6%E8%B0%B1/"/>
    <id>http://smallfang.tk/2019/03/09/家谱/</id>
    <published>2019-03-09T13:36:19.000Z</published>
    <updated>2019-03-10T10:20:26.035Z</updated>
    
    <content type="html"><![CDATA[<p>blog</p><a id="more"></a><hr><p>…</p><p>map是个好东西</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="built_in">string</span>&gt;p;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">searchav</span><span class="params">(<span class="built_in">string</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x!=p[x]) </span><br><span class="line">        p[x]=searchav(p[x]);</span><br><span class="line">    <span class="keyword">return</span>  p[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(;;)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> x;</span><br><span class="line"><span class="keyword">char</span> char_f;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="literal">false</span>)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;char_f;</span><br><span class="line"><span class="keyword">if</span>(char_f==<span class="string">'$'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(char_f==<span class="string">'#'</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> father=x;</span><br><span class="line"><span class="keyword">if</span>(p[x]==<span class="string">""</span>) p[x]=x;</span><br><span class="line">        <span class="keyword">for</span>(;;)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;char_f;flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(char_f!=<span class="string">'+'</span>)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">p[x]=father;</span><br><span class="line">flag=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(char_f==<span class="string">'?'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">flag=<span class="literal">false</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">" "</span>&lt;&lt;searchav(x)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;blog&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>POJ-登山</title>
    <link href="http://smallfang.tk/2019/02/20/POJ-%E7%99%BB%E5%B1%B1/"/>
    <id>http://smallfang.tk/2019/02/20/POJ-登山/</id>
    <published>2019-02-20T13:11:46.000Z</published>
    <updated>2019-02-20T13:16:24.148Z</updated>
    
    <content type="html"><![CDATA[<p>#题目</p><p>在这里</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#题目&lt;/p&gt;
&lt;p&gt;在这里&lt;/p&gt;

      
    
    </summary>
    
      <category term="POJ" scheme="http://smallfang.tk/categories/POJ/"/>
    
    
      <category term="dp" scheme="http://smallfang.tk/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>元宵节快乐</title>
    <link href="http://smallfang.tk/2019/02/19/%E5%85%83%E5%AE%B5%E8%8A%82%E5%BF%AB%E4%B9%90/"/>
    <id>http://smallfang.tk/2019/02/19/元宵节快乐/</id>
    <published>2019-02-19T12:23:25.000Z</published>
    <updated>2019-02-19T12:29:14.116Z</updated>
    
    <content type="html"><![CDATA[<p>元宵节快乐</p><a id="more"></a><p>在这里祝大家元宵节快乐…<br>几件事:<br>1.春节特别版主题已经换过来了…<del>(已经把特别版删了,够红了,唯一遗憾没截图)</del><br>2.等元宵节过去了恢复更新<br>3.谁要这个源代码加博主qq:468828374</p><center>The end</center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;元宵节快乐&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>更新来了</title>
    <link href="http://smallfang.tk/2019/01/31/%E6%9B%B4%E6%96%B0%E6%9D%A5%E4%BA%86/"/>
    <id>http://smallfang.tk/2019/01/31/更新来了/</id>
    <published>2019-01-31T02:58:55.000Z</published>
    <updated>2019-01-31T02:59:40.129Z</updated>
    
    <content type="html"><![CDATA[<p>2333<br><a id="more"></a><br>是来了….</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2333&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>最长上升子序列</title>
    <link href="http://smallfang.tk/2019/01/24/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>http://smallfang.tk/2019/01/24/最长上升子序列/</id>
    <published>2019-01-24T13:17:53.000Z</published>
    <updated>2019-01-24T13:41:31.412Z</updated>
    
    <content type="html"><![CDATA[<p><del>我又满血复活了!</del></p><a id="more"></a><h1 id="0-前言"><a href="#0-前言" class="headerlink" title="0 前言"></a>0 前言</h1><p>动态规划中最简单的东西-最长上升子序列</p><h1 id="1-最长上升子序列"><a href="#1-最长上升子序列" class="headerlink" title="1 最长上升子序列"></a>1 最长上升子序列</h1><p>我们就来举个栗子吧.</p><p>1 3 7 3 4</p><p>其中[1,3,4]是一个子序列</p><h1 id="2-动态规划"><a href="#2-动态规划" class="headerlink" title="2 动态规划"></a>2 动态规划</h1><p>此题可以使用动态规划</p><hr><p>其实我不想敷衍了事,但是我实在太困了…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;我又满血复活了!&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>生日快乐</title>
    <link href="http://smallfang.tk/2019/01/17/%E7%94%9F%E6%97%A5%E5%BF%AB%E4%B9%90/"/>
    <id>http://smallfang.tk/2019/01/17/生日快乐/</id>
    <published>2019-01-17T13:23:58.000Z</published>
    <updated>2019-01-17T13:25:10.237Z</updated>
    
    <content type="html"><![CDATA[<p>明天生日…</p><a id="more"></a><p>终于有理由推更几天了[滑稽]</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;明天生日…&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>杂谈dfs</title>
    <link href="http://smallfang.tk/2019/01/13/%E6%9D%82%E8%B0%88dfs/"/>
    <id>http://smallfang.tk/2019/01/13/杂谈dfs/</id>
    <published>2019-01-13T03:29:42.000Z</published>
    <updated>2019-01-13T03:39:39.633Z</updated>
    
    <content type="html"><![CDATA[<p>期末考试准备考崩</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>首先先说一下,我可不知道什么是快快编程</p><h1 id="前置技能"><a href="#前置技能" class="headerlink" title="前置技能"></a>前置技能</h1><p>1.queue</p><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>一条道走到黑…(个人理解)</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>选择第i条随便找直到找到要找的….<del>(还是个人理解,但是差不多就是这个意思)</del></p><h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==n)<span class="comment">//找到个数了</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(check())<span class="comment">//如果正确</span></span><br><span class="line">&#123;</span><br><span class="line">ans++;<span class="comment">//答案+1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">b[i]=<span class="number">100</span>;</span><br><span class="line">dfs(x+<span class="number">1</span>);<span class="comment">//枚举下一位</span></span><br><span class="line">b[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><center>The end</center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;期末考试准备考崩&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://smallfang.tk/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="dfs" scheme="http://smallfang.tk/tags/dfs/"/>
    
  </entry>
  
  <entry>
    <title>洛谷题解-P1597-语句解析</title>
    <link href="http://smallfang.tk/2019/01/08/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3-P1597-%E8%AF%AD%E5%8F%A5%E8%A7%A3%E6%9E%90/"/>
    <id>http://smallfang.tk/2019/01/08/洛谷题解-P1597-语句解析/</id>
    <published>2019-01-08T13:50:45.000Z</published>
    <updated>2019-01-08T13:51:48.949Z</updated>
    
    <content type="html"><![CDATA[<p>这是一道简单的模拟，非常简单，可以利用c++文件输入输出的个性while(cin&gt;&gt;x).然后呢需要注意有字母赋值的可能性。<br><a id="more"></a><br>一定要注意，而且这个数是个一位数，无需分割<del>(个人认为分割就是普及-的题目)</del>代码附上:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> f,d,e,g,z;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>,c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;f)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;g&gt;&gt;d&gt;&gt;z&gt;&gt;e;</span><br><span class="line"><span class="keyword">if</span>(z&gt;=<span class="string">'0'</span>&amp;&amp;z&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">z=z-<span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'a'</span>)a=z;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'b'</span>)b=z;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'c'</span>)c=z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">'a'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'a'</span>)a=a;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'b'</span>)b=a;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'c'</span>)c=a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">'b'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'a'</span>)a=b;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'b'</span>)b=b;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'c'</span>)c=b;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(z==<span class="string">'c'</span>)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'a'</span>)a=c;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'b'</span>)b=b;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="string">'c'</span>)c=c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">" "</span>&lt;&lt;b&lt;&lt;<span class="string">" "</span>&lt;&lt;c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><del>~~第n次写题解竟然一次都没过</del>~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一道简单的模拟，非常简单，可以利用c++文件输入输出的个性while(cin&amp;gt;&amp;gt;x).然后呢需要注意有字母赋值的可能性。&lt;br&gt;
    
    </summary>
    
      <category term="洛谷题解" scheme="http://smallfang.tk/categories/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="luogublog" scheme="http://smallfang.tk/tags/luogublog/"/>
    
  </entry>
  
  <entry>
    <title>杂谈动态规划</title>
    <link href="http://smallfang.tk/2019/01/04/%E6%9D%82%E8%B0%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>http://smallfang.tk/2019/01/04/杂谈动态规划/</id>
    <published>2019-01-04T12:57:22.000Z</published>
    <updated>2019-01-12T05:19:27.171Z</updated>
    
    <content type="html"><![CDATA[<p><del>动态规划是啥?能吃吗?QAQ</del></p><a id="more"></a><h1 id="前置技能"><a href="#前置技能" class="headerlink" title="前置技能"></a>前置技能</h1><p><del>1.无</del></p><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p><del>让我们看看一看大黄本上的解释:</del><br>动态规划程序设计是对解最优化问题的一种途径，一种方法，而不是一种特殊的算法，不像前面所述的那些搜索或数值计算那样具有一个标准的数学表达式和明确清晰的解题方法。动态规划程序设计往往是针对一种最优化问题。由于各种问题的性质不同，确定最优解的条件也互不相同，因而动态规划的设计方法与对不同的问题有各具特色的解题方法，而不存在一种万能的动态规划算法可以解决各类最优化问题，因此，读者在学习时除了要对基本概念和方法，理解外，必须具体。问题具体分析处理，以丰富的想象力去建立模型，用创造性的技巧去解决。我们也可以通过对若干有代表性的问题的动态规划算法进行分析讨论，逐渐学会并掌握这一设计方法。<br><strong>以上的解释全部是来自大黄本<del>(然后我不要脸的使用语音识字)</del></strong></p><h1 id="基础动态规划套路"><a href="#基础动态规划套路" class="headerlink" title="基础动态规划套路"></a>基础动态规划套路</h1><p>动态规划其实也是有一个套路的,只要你找到边界条件,转移方程基本上就可以解决了.</p><p>边界条件比较好理解,也比较好些,但是转移方程非常的不好想，因为转移方程控制着题目的难度.</p><p>转移方程列的方法是通过上一个推得这一个.这就是转移方程。</p><h1 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a>01背包</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p>给定n种物品和一个容量为C的背包物品i的重量是wi其价值为vi,每种有一个。<br>01背包是学习背包的基础</p><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//bianjie</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//zhuanyi</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转移方程大概就是这样的:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a[i]&lt;=j)</span><br><span class="line">f[i][j] = max(b[i]+f[i<span class="number">-1</span>][j-a[i]],f[i<span class="number">-1</span>][j]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">f[i][j] = f[i<span class="number">-1</span>][j];</span><br></pre></td></tr></table></figure></p><h1 id="完全背包"><a href="#完全背包" class="headerlink" title="完全背包"></a>完全背包</h1><p><del>(不好意思拖得时间有点久)</del></p><h2 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h2><p>给定n种物品和一个容量为w的背包物品i的重量是wi其价值为vi,每种有无限个。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>从不同的角度去考虑背包.与01背包非常相似,仅仅比01背包多一个for循环</p><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//bianjie</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//zhuanyi</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>1.01背包 √<br>2.完全背包 √<br>3.多重背包 预计完工时间:2019.1.17<br>4.混合三种背包 预计完工时间:2019.1.17<br>5.二维费用背包 预计完工时间:2019.1.18<br>6.分组的背包 预计完工时间:2019.1.18<br>7.有依赖的背包 预计完工时间:2019.1.19<br>8.背包问题的方案总数 预计完工时间:2019.1.19</p><hr><center> thanks for your watching! </center><br><center> the end</center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;动态规划是啥?能吃吗?QAQ&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://smallfang.tk/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="动态规划" scheme="http://smallfang.tk/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>算法统计</title>
    <link href="http://smallfang.tk/2018/12/25/%E7%AE%97%E6%B3%95%E7%BB%9F%E8%AE%A1/"/>
    <id>http://smallfang.tk/2018/12/25/算法统计/</id>
    <published>2018-12-25T12:07:09.000Z</published>
    <updated>2018-12-25T12:09:15.544Z</updated>
    
    <content type="html"><![CDATA[<p>感觉自己好渺小<br><a id="more"></a></p><h1 id="线性结构-9-3"><a href="#线性结构-9-3" class="headerlink" title="线性结构 9/3"></a>线性结构 9/3</h1><h2 id="莫队"><a href="#莫队" class="headerlink" title="莫队"></a>莫队</h2><h2 id="前缀和"><a href="#前缀和" class="headerlink" title="前缀和"></a>前缀和</h2><h2 id="数组-√"><a href="#数组-√" class="headerlink" title="数组 √"></a>数组 √</h2><h2 id="栈-√"><a href="#栈-√" class="headerlink" title="栈 √"></a>栈 √</h2><h2 id="队列-√"><a href="#队列-√" class="headerlink" title="队列 √"></a>队列 √</h2><h2 id="块状链表-块状数组-分块"><a href="#块状链表-块状数组-分块" class="headerlink" title="块状链表,块状数组,分块"></a>块状链表,块状数组,分块</h2><h2 id="st表-稀疏表"><a href="#st表-稀疏表" class="headerlink" title="st表,稀疏表"></a>st表,稀疏表</h2><h2 id="差分"><a href="#差分" class="headerlink" title="差分"></a>差分</h2><hr><h1 id="网络流-11-0"><a href="#网络流-11-0" class="headerlink" title="网络流 11/0"></a>网络流 11/0</h1><h2 id="最大流-3-0"><a href="#最大流-3-0" class="headerlink" title="最大流 3/0"></a>最大流 3/0</h2><h3 id="Dinic"><a href="#Dinic" class="headerlink" title="Dinic"></a>Dinic</h3><h3 id="Sap"><a href="#Sap" class="headerlink" title="Sap"></a>Sap</h3><h3 id="有上下界的最大流"><a href="#有上下界的最大流" class="headerlink" title="有上下界的最大流"></a>有上下界的最大流</h3><h2 id="最小割-5-0"><a href="#最小割-5-0" class="headerlink" title="最小割 5/0"></a>最小割 5/0</h2><h3 id="闭合图"><a href="#闭合图" class="headerlink" title="闭合图"></a>闭合图</h3><h3 id="最小点权覆盖集"><a href="#最小点权覆盖集" class="headerlink" title="最小点权覆盖集"></a>最小点权覆盖集</h3><h3 id="最大点权覆盖集"><a href="#最大点权覆盖集" class="headerlink" title="最大点权覆盖集"></a>最大点权覆盖集</h3><h3 id="分数规划"><a href="#分数规划" class="headerlink" title="分数规划"></a>分数规划</h3><h3 id="最大密度子图"><a href="#最大密度子图" class="headerlink" title="最大密度子图"></a>最大密度子图</h3><h2 id="费用流-3-0"><a href="#费用流-3-0" class="headerlink" title="费用流  3/0"></a>费用流  3/0</h2><h3 id="最短路增广费用流"><a href="#最短路增广费用流" class="headerlink" title="最短路增广费用流"></a>最短路增广费用流</h3><h3 id="zkw费用流"><a href="#zkw费用流" class="headerlink" title="zkw费用流"></a>zkw费用流</h3><h3 id="最小费用可行流"><a href="#最小费用可行流" class="headerlink" title="最小费用可行流"></a>最小费用可行流</h3><hr><h1 id="基础算法-6-6"><a href="#基础算法-6-6" class="headerlink" title="基础算法 6/6"></a>基础算法 6/6</h1><h2 id="模拟-√"><a href="#模拟-√" class="headerlink" title="模拟 √"></a>模拟 √</h2><h2 id="贪心-√"><a href="#贪心-√" class="headerlink" title="贪心 √"></a>贪心 √</h2><h2 id="递推-√"><a href="#递推-√" class="headerlink" title="递推 √"></a>递推 √</h2><h2 id="递归-√"><a href="#递归-√" class="headerlink" title="递归 √"></a>递归 √</h2><h2 id="枚举-暴力-√"><a href="#枚举-暴力-√" class="headerlink" title="枚举,暴力 √"></a>枚举,暴力 √</h2><h2 id="分治-√"><a href="#分治-√" class="headerlink" title="分治 √"></a>分治 √</h2><hr><h1 id="排序-9-8"><a href="#排序-9-8" class="headerlink" title="排序 9/8"></a>排序 9/8</h1><h2 id="冒泡排序-√"><a href="#冒泡排序-√" class="headerlink" title="冒泡排序 √"></a>冒泡排序 √</h2><h2 id="选择排序-√"><a href="#选择排序-√" class="headerlink" title="选择排序 √"></a>选择排序 √</h2><h2 id="桶排-√"><a href="#桶排-√" class="headerlink" title="桶排 √"></a>桶排 √</h2><h2 id="插入排序-√"><a href="#插入排序-√" class="headerlink" title="插入排序 √"></a>插入排序 √</h2><h2 id="归并排序-√"><a href="#归并排序-√" class="headerlink" title="归并排序 √"></a>归并排序 √</h2><h2 id="快速排序-√"><a href="#快速排序-√" class="headerlink" title="快速排序 √"></a>快速排序 √</h2><h2 id="希尔排序-√"><a href="#希尔排序-√" class="headerlink" title="希尔排序 √"></a>希尔排序 √</h2><h2 id="外部排序"><a href="#外部排序" class="headerlink" title="外部排序"></a>外部排序</h2><hr><h1 id="查找算法-3-3"><a href="#查找算法-3-3" class="headerlink" title="查找算法 3/3"></a>查找算法 3/3</h1><h2 id="二分答案-√"><a href="#二分答案-√" class="headerlink" title="二分答案 √"></a>二分答案 √</h2><h2 id="顺序查找-√"><a href="#顺序查找-√" class="headerlink" title="顺序查找 √"></a>顺序查找 √</h2><h2 id="二分查找-√"><a href="#二分查找-√" class="headerlink" title="二分查找 √"></a>二分查找 √</h2><hr><h1 id="二分图-5-0"><a href="#二分图-5-0" class="headerlink" title="二分图 5/0"></a>二分图 5/0</h1><h2 id="最大匹配-3-0"><a href="#最大匹配-3-0" class="headerlink" title="最大匹配 3/0"></a>最大匹配 3/0</h2><h3 id="匈牙利算法"><a href="#匈牙利算法" class="headerlink" title="匈牙利算法"></a>匈牙利算法</h3><h3 id="一般图的最大匹配"><a href="#一般图的最大匹配" class="headerlink" title="一般图的最大匹配"></a>一般图的最大匹配</h3><h3 id="Konig定理"><a href="#Konig定理" class="headerlink" title="Konig定理"></a>Konig定理</h3><h2 id="带权二分图匹配"><a href="#带权二分图匹配" class="headerlink" title="带权二分图匹配"></a>带权二分图匹配</h2><h2 id="稳定婚姻系统"><a href="#稳定婚姻系统" class="headerlink" title="稳定婚姻系统"></a>稳定婚姻系统</h2><hr><h1 id="其他技巧-18-2"><a href="#其他技巧-18-2" class="headerlink" title="其他技巧 18/2"></a>其他技巧 18/2</h1><h2 id="暴力数据结构"><a href="#暴力数据结构" class="headerlink" title="暴力数据结构"></a>暴力数据结构</h2><h2 id="高精-√"><a href="#高精-√" class="headerlink" title="高精 √"></a>高精 √</h2><h2 id="博弈论-3-0"><a href="#博弈论-3-0" class="headerlink" title="博弈论 3/0"></a>博弈论 3/0</h2><h3 id="Nim游戏"><a href="#Nim游戏" class="headerlink" title="Nim游戏"></a>Nim游戏</h3><h3 id="博弈树"><a href="#博弈树" class="headerlink" title="博弈树"></a>博弈树</h3><h3 id="Shannon开关游戏"><a href="#Shannon开关游戏" class="headerlink" title="Shannon开关游戏"></a>Shannon开关游戏</h3><h2 id="倍增"><a href="#倍增" class="headerlink" title="倍增"></a>倍增</h2><h2 id="离散化"><a href="#离散化" class="headerlink" title="离散化"></a>离散化</h2><h2 id="哈希，HASH-3-0"><a href="#哈希，HASH-3-0" class="headerlink" title="哈希，HASH 3/0"></a>哈希，HASH 3/0</h2><h3 id="ELFhash"><a href="#ELFhash" class="headerlink" title="ELFhash"></a>ELFhash</h3><h3 id="SDBM"><a href="#SDBM" class="headerlink" title="SDBM"></a>SDBM</h3><h3 id="BKDR"><a href="#BKDR" class="headerlink" title="BKDR"></a>BKDR</h3><h2 id="随机贪心-随机化"><a href="#随机贪心-随机化" class="headerlink" title="随机贪心,随机化"></a>随机贪心,随机化</h2><h2 id="快速傅里叶变换-DFT-FFT"><a href="#快速傅里叶变换-DFT-FFT" class="headerlink" title="快速傅里叶变换,DFT,FFT"></a>快速傅里叶变换,DFT,FFT</h2><h2 id="位运算-按位"><a href="#位运算-按位" class="headerlink" title="位运算,按位"></a>位运算,按位</h2><h2 id="骗分-√"><a href="#骗分-√" class="headerlink" title="骗分 √"></a>骗分 √</h2><h2 id="NP问题"><a href="#NP问题" class="headerlink" title="NP问题"></a>NP问题</h2><h2 id="构造"><a href="#构造" class="headerlink" title="构造"></a>构造</h2><h2 id="快速数论变换NTT"><a href="#快速数论变换NTT" class="headerlink" title="快速数论变换NTT"></a>快速数论变换NTT</h2><h2 id="快速沃尔什变换FWT"><a href="#快速沃尔什变换FWT" class="headerlink" title="快速沃尔什变换FWT"></a>快速沃尔什变换FWT</h2><hr><h1 id="字符串-9-0"><a href="#字符串-9-0" class="headerlink" title="字符串 9/0"></a>字符串 9/0</h1><h2 id="后缀自动机-SAM"><a href="#后缀自动机-SAM" class="headerlink" title="后缀自动机,SAM"></a>后缀自动机,SAM</h2><h2 id="字典树-Trie树"><a href="#字典树-Trie树" class="headerlink" title="字典树,Trie树"></a>字典树,Trie树</h2><h2 id="AC自动机"><a href="#AC自动机" class="headerlink" title="AC自动机"></a>AC自动机</h2><h2 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h2><h2 id="后缀数组-SA"><a href="#后缀数组-SA" class="headerlink" title="后缀数组,SA"></a>后缀数组,SA</h2><h2 id="后缀树"><a href="#后缀树" class="headerlink" title="后缀树"></a>后缀树</h2><h2 id="有限状态自动机"><a href="#有限状态自动机" class="headerlink" title="有限状态自动机"></a>有限状态自动机</h2><h2 id="哈夫曼-Huffman"><a href="#哈夫曼-Huffman" class="headerlink" title="哈夫曼,Huffman"></a>哈夫曼,Huffman</h2><h2 id="回文自动机PAM"><a href="#回文自动机PAM" class="headerlink" title="回文自动机PAM"></a>回文自动机PAM</h2><h2 id="Manacher算法"><a href="#Manacher算法" class="headerlink" title="Manacher算法"></a>Manacher算法</h2><hr><h1 id="动态规划-动规-dp-15-4"><a href="#动态规划-动规-dp-15-4" class="headerlink" title="动态规划,动规,dp 15/4"></a>动态规划,动规,dp 15/4</h1><h2 id="背包-√"><a href="#背包-√" class="headerlink" title="背包 √"></a>背包 √</h2><h2 id="环型动规-环型dp"><a href="#环型动规-环型dp" class="headerlink" title="环型动规,环型dp"></a>环型动规,环型dp</h2><h2 id="数位动规-数位dp"><a href="#数位动规-数位dp" class="headerlink" title="数位动规,数位dp"></a>数位动规,数位dp</h2><h2 id="多维状态"><a href="#多维状态" class="headerlink" title="多维状态"></a>多维状态</h2><h2 id="区间动规-区间dp"><a href="#区间动规-区间dp" class="headerlink" title="区间动规,区间dp"></a>区间动规,区间dp</h2><h2 id="子母树"><a href="#子母树" class="headerlink" title="子母树"></a>子母树</h2><h2 id="动态规划优化-7-3"><a href="#动态规划优化-7-3" class="headerlink" title="动态规划优化 7/3"></a>动态规划优化 7/3</h2><h3 id="单调队列-√"><a href="#单调队列-√" class="headerlink" title="单调队列 √"></a>单调队列 √</h3><h3 id="降低维度-降维"><a href="#降低维度-降维" class="headerlink" title="降低维度,降维"></a>降低维度,降维</h3><h3 id="优先队列-√"><a href="#优先队列-√" class="headerlink" title="优先队列 √"></a>优先队列 √</h3><h3 id="矩阵加速-矩阵优化"><a href="#矩阵加速-矩阵优化" class="headerlink" title="矩阵加速,矩阵优化"></a>矩阵加速,矩阵优化</h3><h3 id="斜率优化"><a href="#斜率优化" class="headerlink" title="斜率优化"></a>斜率优化</h3><h3 id="状态压缩-状压-√"><a href="#状态压缩-状压-√" class="headerlink" title="状态压缩,状压 √"></a>状态压缩,状压 √</h3><h3 id="四边形不等式"><a href="#四边形不等式" class="headerlink" title="四边形不等式"></a>四边形不等式</h3><h2 id="树形"><a href="#树形" class="headerlink" title="树形"></a>树形</h2><h2 id="插头dp"><a href="#插头dp" class="headerlink" title="插头dp"></a>插头dp</h2><hr><h1 id="搜索-12-4"><a href="#搜索-12-4" class="headerlink" title="搜索 12/4"></a>搜索 12/4</h1><h2 id="广度优先搜索-BFS-√"><a href="#广度优先搜索-BFS-√" class="headerlink" title="广度优先搜索,BFS √"></a>广度优先搜索,BFS √</h2><h2 id="深度优先搜索-DFS-√"><a href="#深度优先搜索-DFS-√" class="headerlink" title="深度优先搜索,DFS √"></a>深度优先搜索,DFS √</h2><h2 id="剪枝-√"><a href="#剪枝-√" class="headerlink" title="剪枝 √"></a>剪枝 √</h2><h2 id="记忆化搜索-√"><a href="#记忆化搜索-√" class="headerlink" title="记忆化搜索 √"></a>记忆化搜索 √</h2><h2 id="启发式搜索-6-0"><a href="#启发式搜索-6-0" class="headerlink" title="启发式搜索 6/0"></a>启发式搜索 6/0</h2><h3 id="启发式迭代加深-IDA"><a href="#启发式迭代加深-IDA" class="headerlink" title="启发式迭代加深,IDA*"></a>启发式迭代加深,IDA*</h3><h3 id="Dancing-Links"><a href="#Dancing-Links" class="headerlink" title="Dancing Links"></a>Dancing Links</h3><h3 id="爬山法"><a href="#爬山法" class="headerlink" title="爬山法"></a>爬山法</h3><h3 id="模拟退火"><a href="#模拟退火" class="headerlink" title="模拟退火"></a>模拟退火</h3><h3 id="遗传"><a href="#遗传" class="headerlink" title="遗传"></a>遗传</h3><h3 id="A-算法"><a href="#A-算法" class="headerlink" title="A*算法"></a>A*算法</h3><h2 id="迭代加深"><a href="#迭代加深" class="headerlink" title="迭代加深"></a>迭代加深</h2><h2 id="随机调整"><a href="#随机调整" class="headerlink" title="随机调整"></a>随机调整</h2><hr><h1 id="数论-数学-37-2"><a href="#数论-数学-37-2" class="headerlink" title="数论,数学 37/2"></a>数论,数学 37/2</h1><hr><h1 id="图论-32-6"><a href="#图论-32-6" class="headerlink" title="图论 32/6"></a>图论 32/6</h1><hr><h1 id="计算几何-9-0"><a href="#计算几何-9-0" class="headerlink" title="计算几何 9/0"></a>计算几何 9/0</h1><hr><h1 id="树形结构-32-2"><a href="#树形结构-32-2" class="headerlink" title="树形结构 32/2"></a>树形结构 32/2</h1><hr><h1 id="总统计-207-40"><a href="#总统计-207-40" class="headerlink" title="总统计 207/40"></a>总统计 207/40</h1><h2 id="完成率-19-32"><a href="#完成率-19-32" class="headerlink" title="完成率 19.32%"></a>完成率 19.32%</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感觉自己好渺小&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>圣诞节快乐</title>
    <link href="http://smallfang.tk/2018/12/25/%E5%9C%A3%E8%AF%9E%E8%8A%82%E5%BF%AB%E4%B9%90/"/>
    <id>http://smallfang.tk/2018/12/25/圣诞节快乐/</id>
    <published>2018-12-24T17:01:01.000Z</published>
    <updated>2018-12-25T10:22:40.937Z</updated>
    
    <content type="html"><![CDATA[<p>圣诞礼物?不存在的…</p><a id="more"></a><p>圣诞节快乐!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;圣诞礼物?不存在的…&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>各类奇葩模板</title>
    <link href="http://smallfang.tk/2018/12/18/%E5%90%84%E7%B1%BB%E5%A5%87%E8%91%A9%E6%A8%A1%E6%9D%BF/"/>
    <id>http://smallfang.tk/2018/12/18/各类奇葩模板/</id>
    <published>2018-12-18T13:29:15.000Z</published>
    <updated>2018-12-20T13:51:06.708Z</updated>
    
    <content type="html"><![CDATA[<p>各类模子,希望各位dalao赞助(￣▽￣)~*(｀・ω・´)<br><a id="more"></a><br>以下为各类模板<del>(持续更新)</del></p><h1 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(y==<span class="number">1</span>)<span class="keyword">return</span> x%c;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> t=qpow(x,y/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(y%<span class="number">2</span>&gt;<span class="number">0</span>)<span class="keyword">return</span> t*t*x%c;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> t*t%c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">root</span><span class="params">(<span class="keyword">int</span> x)</span><span class="comment">//找根 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[x]&lt;<span class="number">0</span>)<span class="keyword">return</span> x;<span class="comment">//如果找到根了 </span></span><br><span class="line">    <span class="keyword">return</span> p[x]=root(p[x]);<span class="comment">//非常精巧边找根边将自己设为根的儿子 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><span class="comment">//将x的和y合并 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u=root(x);<span class="comment">//追溯到x的根 </span></span><br><span class="line"><span class="keyword">int</span> v=root(y);<span class="comment">//追溯到y的根 </span></span><br><span class="line"><span class="keyword">if</span>(u!=v)<span class="comment">//如果两人的根不相等</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(u&lt;v)</span><br><span class="line">        &#123;</span><br><span class="line">            p[u]=p[u]+p[v];</span><br><span class="line">            p[v]=u;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p[v]=p[v]+p[u];</span><br><span class="line">            p[u]=v;</span><br><span class="line">        &#125;</span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">findg</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><span class="comment">//如果x和y属于同一个图 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u=root(x);<span class="comment">//追溯到x的根 </span></span><br><span class="line"><span class="keyword">int</span> v=root(y);<span class="comment">//追溯到y的根 </span></span><br><span class="line">   <span class="keyword">if</span>(u==v)<span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//如果x和y属于同一个图</span></span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//否则返回不为同一个根 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="线性筛素数"><a href="#线性筛素数" class="headerlink" title="线性筛素数"></a>线性筛素数</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)ip[i]=<span class="number">1</span>;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">     &#123;</span><br><span class="line">     <span class="keyword">if</span>(ip[i])</span><br><span class="line">     &#123;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*i;j&lt;=n;j=j+i)</span><br><span class="line">     &#123;</span><br><span class="line">     ip[j] = <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;各类模子,希望各位dalao赞助(￣▽￣)~*(｀・ω・´)&lt;br&gt;
    
    </summary>
    
    
      <category term="模板" scheme="http://smallfang.tk/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>洛谷题解-P1111-修复公路</title>
    <link href="http://smallfang.tk/2018/12/16/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3-P1111-%E4%BF%AE%E5%A4%8D%E5%85%AC%E8%B7%AF/"/>
    <id>http://smallfang.tk/2018/12/16/洛谷题解-P1111-修复公路/</id>
    <published>2018-12-16T13:41:44.000Z</published>
    <updated>2018-12-22T05:47:21.290Z</updated>
    
    <content type="html"><![CDATA[<p>天啊撸，又双叒叕的来的还是我…</p><a id="more"></a><p>LG-1111-修复公路&gt;_&lt;<br><del>学完并查集大水题aua</del></p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><a href="https://www.luogu.org/problemnew/show/P1111" target="_blank" rel="noopener">题目描述</a></h1><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>并查集….</p><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>一个图之间断开了，现在给你n,m.然后有m组,每组有x,y,t,x与y之间如果连接的话需要t分钟，问联通需要几分钟.</p><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><p>先以时间从小到大排序,可以写一个结构体类似于….这样<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pef</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>然后其中x代表x,y代表y,m代表时间;</p><h2 id="sort判断函数"><a href="#sort判断函数" class="headerlink" title="sort判断函数"></a>sort判断函数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(pef x,pef y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.m&lt;y.m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="检查是否图为联通"><a href="#检查是否图为联通" class="headerlink" title="检查是否图为联通"></a>检查是否图为联通</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]&lt;<span class="number">0</span>)t++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(t==<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="找到自己的祖宗…"><a href="#找到自己的祖宗…" class="headerlink" title="找到自己的祖宗…"></a>找到自己的祖宗…</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">root</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[x]&lt;<span class="number">0</span>)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> p[x]=root(p[x]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="并查集-并"><a href="#并查集-并" class="headerlink" title="并查集-并"></a>并查集-并</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u=root(x);</span><br><span class="line">    <span class="keyword">int</span> v=root(y);</span><br><span class="line">    <span class="keyword">if</span>(u!=v)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(u&lt;v)</span><br><span class="line">        &#123;</span><br><span class="line">            p[u]=p[u]+p[v];</span><br><span class="line">            p[v]=u;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p[v]=p[v]+p[u];</span><br><span class="line">            p[u]=v;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="判断两人的祖宗是否相等"><a href="#判断两人的祖宗是否相等" class="headerlink" title="判断两人的祖宗是否相等"></a>判断两人的祖宗是否相等</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u=root(x);</span><br><span class="line">    <span class="keyword">int</span> v=root(y);</span><br><span class="line">    <span class="keyword">if</span>(u!=v)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id=""><a href="#" class="headerlink" title="!"></a>!</h2><p>有一点一定要注意…</p><p>那就是输出的是修路的最长的时间…</p><p>以上就是全部的思路,main中的代码.<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">    设p数组为<span class="number">-1</span>;</span><br><span class="line">输入n,m;</span><br><span class="line">从<span class="number">1</span>-m循环</span><br><span class="line">&#123;</span><br><span class="line">  输入x,y,z;</span><br><span class="line">&#125;</span><br><span class="line">从a+<span class="number">1</span>-a+<span class="number">1</span>+n以cmp函数规则排序;</span><br><span class="line">从<span class="number">1</span>-m循环</span><br><span class="line"> &#123;</span><br><span class="line">     如果(a[i].x与a[i].y为不同一祖宗(!is(a[i],x,a[i],y))</span><br><span class="line"> &#123;</span><br><span class="line">      合并(a[i].x,a[i].y);</span><br><span class="line"> &#125;</span><br><span class="line"> 如果(图已联通)</span><br><span class="line"> &#123;</span><br><span class="line">输出 最高时间;</span><br><span class="line">退出程序;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> 输出 <span class="number">-1</span>;</span><br><span class="line"> 退出;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">╭──╮╭╭╮╮╭──╮╭╮　　╭╮　　╭──╮╭──╮╭╮╭╮╭──╮</span></span><br><span class="line"><span class="comment">│╭─╯│　　││╭╮│││　　││　　│╭─╯│╭╮││╰╮││╭─╯</span></span><br><span class="line"><span class="comment">│╰─╮│││││╰╯│││　　││　　│╰─╮│╰╯││　　│││╭╮</span></span><br><span class="line"><span class="comment">╰─╮││╭╮││╭╮│││　　││　　│╭─╯│╭╮││　　│││││</span></span><br><span class="line"><span class="comment">╭─╯││││││││││╰─╮│╰─╮││　　│││││╰╮││╰╯│</span></span><br><span class="line"><span class="comment">╰──╯╰╯╰╯╰╯╰╯╰──╯╰──╯╰╯　　╰╯╰╯╰╯╰╯╰──╯</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pef</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">100001</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">root</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[x]&lt;<span class="number">0</span>)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> p[x]=root(p[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u=root(x);</span><br><span class="line">    <span class="keyword">int</span> v=root(y);</span><br><span class="line">    <span class="keyword">if</span>(u!=v)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(u&lt;v)</span><br><span class="line">        &#123;</span><br><span class="line">            p[u]=p[u]+p[v];</span><br><span class="line">            p[v]=u;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p[v]=p[v]+p[u];</span><br><span class="line">            p[u]=v;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u=root(x);</span><br><span class="line">    <span class="keyword">int</span> v=root(y);</span><br><span class="line">    <span class="keyword">if</span>(u!=v)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]&lt;<span class="number">0</span>)t++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(t==<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">pef a[<span class="number">100001</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(pef x,pef y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.m&lt;y.m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(p,<span class="number">-1</span>,<span class="number">400004</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i].x&gt;&gt;a[i].y&gt;&gt;a[i].m;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+m,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> xa=a[i].x,ya=a[i].y;</span><br><span class="line">         <span class="keyword">int</span> money=a[i].m;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(!is(xa,ya))</span><br><span class="line">        &#123;</span><br><span class="line">            ans=ans+money;</span><br><span class="line">            Merge(xa,ya);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(check())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;money;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此题可以顺带手撸掉模板最小生成树…<br>bye~ </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;天啊撸，又双叒叕的来的还是我…&lt;/p&gt;
    
    </summary>
    
      <category term="洛谷题解" scheme="http://smallfang.tk/categories/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="并查集" scheme="http://smallfang.tk/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>洛谷题解-P2058-海港</title>
    <link href="http://smallfang.tk/2018/12/14/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3-P2058-%E6%B5%B7%E6%B8%AF/"/>
    <id>http://smallfang.tk/2018/12/14/洛谷题解-P2058-海港/</id>
    <published>2018-12-14T14:12:32.000Z</published>
    <updated>2018-12-14T14:36:09.724Z</updated>
    
    <content type="html"><![CDATA[<p>LG - P2058 - 海港</p><a id="more"></a><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://www.luogu.org/problemnew/show/P1077" target="_blank" rel="noopener">这里</a></p><hr><h1 id="思路部分"><a href="#思路部分" class="headerlink" title="思路部分"></a>思路部分</h1><p>这道题乍一看是一道<del>大难题</del>大模拟</p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p> 维护一个队列(不使用库函数)<br> 叫做dl</p><p> dl[i].ti意思是第i个人在什么时候到达</p><p> dl[i].ni意思是第i个人的国籍</p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p> 输入国籍，定义pep,统计该国籍有没有人，如果没有那么ans++,并且pep[tmp]++;</p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p> 由于给定条件保证数据递增,所以就保证此时的队列是一个单调递增的。然后定义e=0,这样从队头扫到元素时间与该此到达时间差小于86400（不等于）如果不满足则e++并且删掉一个改国籍的人,如果该国籍此时没有人那么ans–;</p><h1 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> ti,na;</span><br><span class="line">&#125;dl[<span class="number">400000</span>];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> pep[<span class="number">400000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> t,k,c=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> e=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;t&gt;&gt;k;</span><br><span class="line">        <span class="keyword">int</span> tmp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=k;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;tmp;</span><br><span class="line">            dl[c+<span class="number">1</span>].ti=t;</span><br><span class="line">            dl[++c].na=tmp;</span><br><span class="line">            <span class="keyword">if</span>(!pep[tmp])</span><br><span class="line">            &#123;</span><br><span class="line">                ans++;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            pep[tmp]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(t-dl[e].ti&gt;=<span class="number">86400</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(!--pep[dl[e++].na])</span><br><span class="line">            ans--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><del>题解终于写完了</del></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;LG - P2058 - 海港&lt;/p&gt;
    
    </summary>
    
      <category term="洛谷题解" scheme="http://smallfang.tk/categories/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="模拟" scheme="http://smallfang.tk/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>flag?</title>
    <link href="http://smallfang.tk/2018/12/09/flag/"/>
    <id>http://smallfang.tk/2018/12/09/flag/</id>
    <published>2018-12-09T13:02:47.000Z</published>
    <updated>2019-01-06T14:01:14.922Z</updated>
    
    <content type="html"><![CDATA[<p>1<br><a id="more"></a><br>1.推出v0.3 未达成<br>2.Ac 200道题 √ ff</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1&lt;br&gt;
    
    </summary>
    
    
      <category term="flag" scheme="http://smallfang.tk/tags/flag/"/>
    
  </entry>
  
  <entry>
    <title>博客更新日志</title>
    <link href="http://smallfang.tk/2018/12/08/%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/"/>
    <id>http://smallfang.tk/2018/12/08/博客更新日志/</id>
    <published>2018-12-08T14:13:28.000Z</published>
    <updated>2019-01-07T10:08:44.712Z</updated>
    
    <content type="html"><![CDATA[<h1 id="V0-2-8"><a href="#V0-2-8" class="headerlink" title="V0.2.8"></a>V0.2.8</h1><a id="more"></a><ul><li>2019.1.7</li><li>(+)h1类型触摸时放大</li><li>(+)cookie-night</li><li>(change)功能下移</li></ul><h1 id="V0-2-7"><a href="#V0-2-7" class="headerlink" title="V0.2.7"></a>V0.2.7</h1><ul><li>2019.1.5</li><li>(change)文章圆角</li><li>(change)按钮圆角</li><li>(change)回到顶部与菜单并行</li></ul><h1 id="V0-2-5"><a href="#V0-2-5" class="headerlink" title="V0.2.5"></a>V0.2.5</h1><ul><li>2019.1.5</li><li>(+)滚动框样式</li></ul><h1 id="V0-2-1"><a href="#V0-2-1" class="headerlink" title="V0.2.1"></a>V0.2.1</h1><ul><li>2018.12.20</li><li>(+)鼠标样式</li></ul><h1 id="V0-2-0"><a href="#V0-2-0" class="headerlink" title="V0.2.0"></a>V0.2.0</h1><ul><li>2018.12.18</li><li>(+)评论功能</li><li>(+)站内搜索功能</li><li>(+)背景样式</li><li>(+)增加加载条</li></ul><h1 id="V0-1-0"><a href="#V0-1-0" class="headerlink" title="V0.1.0"></a>V0.1.0</h1><ul><li>基础</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;V0-2-8&quot;&gt;&lt;a href=&quot;#V0-2-8&quot; class=&quot;headerlink&quot; title=&quot;V0.2.8&quot;&gt;&lt;/a&gt;V0.2.8&lt;/h1&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://smallfang.tk/tags/hexo/"/>
    
  </entry>
  
</feed>
