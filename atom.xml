<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>smallfang</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://smallfang.tk/"/>
  <updated>2018-12-23T14:55:11.946Z</updated>
  <id>http://smallfang.tk/</id>
  
  <author>
    <name>smallfang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>杂谈并查集</title>
    <link href="http://smallfang.tk/2018/12/23/%E6%9D%82%E8%B0%88%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    <id>http://smallfang.tk/2018/12/23/杂谈并查集/</id>
    <published>2018-12-23T13:55:56.000Z</published>
    <updated>2018-12-23T14:55:11.946Z</updated>
    
    <content type="html"><![CDATA[<p>并查集.</p><a id="more"></a><h1 id="前置技能"><a href="#前置技能" class="headerlink" title="前置技能"></a>前置技能</h1><p><strong>1.图与树的基础概念与存储方式(并查集主要运用邻接表储存关系)</strong></p><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>从一个简单的例子解释:<br>有一天<br>cz zc kkk him mih yp py yh hy 这一群江湖人士要开始选大哥了<br>首先他们的关系网是这样的<br><img src="/img/post1/1.png" alt="1"><br>(其中星星代表代表老大)<br>后来<del>组委会</del>决定留下三位大哥<br>然后yp和py决定要合并然后<del>发现</del>py实力太弱,py拜yp为师,cz和zc决定合并后zc输了然后zc拜cz为师,现在是此时的关系网<br><img src="/img/post1/2.png" alt="2"><br>现在还剩下7位大哥<br>然后cz要和kkk合并,cz的弟子比kkk的弟子多所以cz为师傅,然后,hy想拜zc为师傅然后发现hy实力太弱就拜了zc为师傅,此时的关系网是<br><img src="/img/post1/3.png" alt="3"><br>后来mih和him都来拜py为徒弟然后就是这样<br><img src="/img/post1/4.png" alt="4"><br>上面的操作就叫做并查集</p><h1 id="代码实现方案"><a href="#代码实现方案" class="headerlink" title="代码实现方案"></a>代码实现方案</h1><p>合并就是将两个合并为一个不难理解,以下为伪代码:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    获得x的根,y的根;</span><br><span class="line">如果两个根不属于一个祖先则合并</span><br><span class="line">将x的父亲设为y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>一份合格的代码:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u=root(x),v=root(y);<span class="comment">//查询x的根和y的根</span></span><br><span class="line"><span class="keyword">if</span>(u!=v)<span class="comment">//如果根不同</span></span><br><span class="line">&#123;</span><br><span class="line">p[u]=v;<span class="comment">//p代表的是邻接表,p[i]表示的是i的父亲的位置</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>代码中出现了寻根的函数,这个函数我们可以写成递归函数以下<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">root</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">0</span>)<span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> root(p[x]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这份代码虽然没有问题但是并不是最优的解法.因为其中如果出现了类似于上面图4中yp的弟子一样，弟子传弟子..<br>然后我们可能会想到我把p[i]设为自己的祖先不就行了.这个方案看着可行，但是有一点如果我的师傅被打败了怎么办类似于cz把yp打败了这是py的师傅还是yp并不是新师傅cz,但是这种想法给我们优化带来一些灵感，就有了以下的优化方式</p><h1 id="路径压缩"><a href="#路径压缩" class="headerlink" title="路径压缩"></a>路径压缩</h1><h2 id="什么是路径压缩"><a href="#什么是路径压缩" class="headerlink" title="什么是路径压缩"></a>什么是路径压缩</h2><p>路径压缩就是将将孙子设为儿子，将所有孙子的儿子设为儿子,只到没有儿子的出现。这个时候最简单的方法是更改一下<br>找根函数,边找边压缩.<br>实现方案:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">root</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">0</span>)<span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> p[x]=root(p[x]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>大概就是酱紫</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>还有一点有些题问根的深度我们可以将师傅设为负数并且越小徒弟越多表示方法:<br>10个徒弟 -10<br>12个徒弟 -12<br>.<br>.<br>.<br>等等等等</p><p><a href="https://blog.smallfang.tk/2018/12/18/各类奇葩模板/" target="_blank" rel="noopener">模板代码</a></p><hr><center> thanks for your watching! </center><br><center> the end</center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;并查集.&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://smallfang.tk/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="并查集" scheme="http://smallfang.tk/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>各类奇葩模板</title>
    <link href="http://smallfang.tk/2018/12/18/%E5%90%84%E7%B1%BB%E5%A5%87%E8%91%A9%E6%A8%A1%E6%9D%BF/"/>
    <id>http://smallfang.tk/2018/12/18/各类奇葩模板/</id>
    <published>2018-12-18T13:29:15.000Z</published>
    <updated>2018-12-20T13:51:06.708Z</updated>
    
    <content type="html"><![CDATA[<p>各类模子,希望各位dalao赞助(￣▽￣)~*(｀・ω・´)<br><a id="more"></a><br>以下为各类模板<del>(持续更新)</del></p><h1 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(y==<span class="number">1</span>)<span class="keyword">return</span> x%c;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> t=qpow(x,y/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(y%<span class="number">2</span>&gt;<span class="number">0</span>)<span class="keyword">return</span> t*t*x%c;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> t*t%c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">root</span><span class="params">(<span class="keyword">int</span> x)</span><span class="comment">//找根 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[x]&lt;<span class="number">0</span>)<span class="keyword">return</span> x;<span class="comment">//如果找到根了 </span></span><br><span class="line">    <span class="keyword">return</span> p[x]=root(p[x]);<span class="comment">//非常精巧边找根边将自己设为根的儿子 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><span class="comment">//将x的和y合并 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u=root(x);<span class="comment">//追溯到x的根 </span></span><br><span class="line"><span class="keyword">int</span> v=root(y);<span class="comment">//追溯到y的根 </span></span><br><span class="line"><span class="keyword">if</span>(u!=v)<span class="comment">//如果两人的根不相等</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(u&lt;v)</span><br><span class="line">        &#123;</span><br><span class="line">            p[u]=p[u]+p[v];</span><br><span class="line">            p[v]=u;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p[v]=p[v]+p[u];</span><br><span class="line">            p[u]=v;</span><br><span class="line">        &#125;</span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">findg</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><span class="comment">//如果x和y属于同一个图 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u=root(x);<span class="comment">//追溯到x的根 </span></span><br><span class="line"><span class="keyword">int</span> v=root(y);<span class="comment">//追溯到y的根 </span></span><br><span class="line">   <span class="keyword">if</span>(u==v)<span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//如果x和y属于同一个图</span></span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//否则返回不为同一个根 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="线性筛素数"><a href="#线性筛素数" class="headerlink" title="线性筛素数"></a>线性筛素数</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)ip[i]=<span class="number">1</span>;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">     &#123;</span><br><span class="line">     <span class="keyword">if</span>(ip[i])</span><br><span class="line">     &#123;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*i;j&lt;=n;j=j+i)</span><br><span class="line">     &#123;</span><br><span class="line">     ip[j] = <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;各类模子,希望各位dalao赞助(￣▽￣)~*(｀・ω・´)&lt;br&gt;
    
    </summary>
    
    
      <category term="模板" scheme="http://smallfang.tk/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>洛谷题解-P1111-修复公路</title>
    <link href="http://smallfang.tk/2018/12/16/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3-P1111-%E4%BF%AE%E5%A4%8D%E5%85%AC%E8%B7%AF/"/>
    <id>http://smallfang.tk/2018/12/16/洛谷题解-P1111-修复公路/</id>
    <published>2018-12-16T13:41:44.000Z</published>
    <updated>2018-12-22T05:47:21.290Z</updated>
    
    <content type="html"><![CDATA[<p>天啊撸，又双叒叕的来的还是我…</p><a id="more"></a><p>LG-1111-修复公路&gt;_&lt;<br><del>学完并查集大水题aua</del></p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><a href="https://www.luogu.org/problemnew/show/P1111" target="_blank" rel="noopener">题目描述</a></h1><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>并查集….</p><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>一个图之间断开了，现在给你n,m.然后有m组,每组有x,y,t,x与y之间如果连接的话需要t分钟，问联通需要几分钟.</p><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><p>先以时间从小到大排序,可以写一个结构体类似于….这样<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pef</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>然后其中x代表x,y代表y,m代表时间;</p><h2 id="sort判断函数"><a href="#sort判断函数" class="headerlink" title="sort判断函数"></a>sort判断函数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(pef x,pef y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.m&lt;y.m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="检查是否图为联通"><a href="#检查是否图为联通" class="headerlink" title="检查是否图为联通"></a>检查是否图为联通</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]&lt;<span class="number">0</span>)t++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(t==<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="找到自己的祖宗…"><a href="#找到自己的祖宗…" class="headerlink" title="找到自己的祖宗…"></a>找到自己的祖宗…</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">root</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[x]&lt;<span class="number">0</span>)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> p[x]=root(p[x]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="并查集-并"><a href="#并查集-并" class="headerlink" title="并查集-并"></a>并查集-并</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u=root(x);</span><br><span class="line">    <span class="keyword">int</span> v=root(y);</span><br><span class="line">    <span class="keyword">if</span>(u!=v)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(u&lt;v)</span><br><span class="line">        &#123;</span><br><span class="line">            p[u]=p[u]+p[v];</span><br><span class="line">            p[v]=u;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p[v]=p[v]+p[u];</span><br><span class="line">            p[u]=v;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="判断两人的祖宗是否相等"><a href="#判断两人的祖宗是否相等" class="headerlink" title="判断两人的祖宗是否相等"></a>判断两人的祖宗是否相等</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u=root(x);</span><br><span class="line">    <span class="keyword">int</span> v=root(y);</span><br><span class="line">    <span class="keyword">if</span>(u!=v)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id=""><a href="#" class="headerlink" title="!"></a>!</h2><p>有一点一定要注意…</p><p>那就是输出的是修路的最长的时间…</p><p>以上就是全部的思路,main中的代码.<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">    设p数组为<span class="number">-1</span>;</span><br><span class="line">输入n,m;</span><br><span class="line">从<span class="number">1</span>-m循环</span><br><span class="line">&#123;</span><br><span class="line">  输入x,y,z;</span><br><span class="line">&#125;</span><br><span class="line">从a+<span class="number">1</span>-a+<span class="number">1</span>+n以cmp函数规则排序;</span><br><span class="line">从<span class="number">1</span>-m循环</span><br><span class="line"> &#123;</span><br><span class="line">     如果(a[i].x与a[i].y为不同一祖宗(!is(a[i],x,a[i],y))</span><br><span class="line"> &#123;</span><br><span class="line">      合并(a[i].x,a[i].y);</span><br><span class="line"> &#125;</span><br><span class="line"> 如果(图已联通)</span><br><span class="line"> &#123;</span><br><span class="line">输出 最高时间;</span><br><span class="line">退出程序;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> 输出 <span class="number">-1</span>;</span><br><span class="line"> 退出;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">╭──╮╭╭╮╮╭──╮╭╮　　╭╮　　╭──╮╭──╮╭╮╭╮╭──╮</span></span><br><span class="line"><span class="comment">│╭─╯│　　││╭╮│││　　││　　│╭─╯│╭╮││╰╮││╭─╯</span></span><br><span class="line"><span class="comment">│╰─╮│││││╰╯│││　　││　　│╰─╮│╰╯││　　│││╭╮</span></span><br><span class="line"><span class="comment">╰─╮││╭╮││╭╮│││　　││　　│╭─╯│╭╮││　　│││││</span></span><br><span class="line"><span class="comment">╭─╯││││││││││╰─╮│╰─╮││　　│││││╰╮││╰╯│</span></span><br><span class="line"><span class="comment">╰──╯╰╯╰╯╰╯╰╯╰──╯╰──╯╰╯　　╰╯╰╯╰╯╰╯╰──╯</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pef</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">100001</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">root</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[x]&lt;<span class="number">0</span>)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> p[x]=root(p[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u=root(x);</span><br><span class="line">    <span class="keyword">int</span> v=root(y);</span><br><span class="line">    <span class="keyword">if</span>(u!=v)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(u&lt;v)</span><br><span class="line">        &#123;</span><br><span class="line">            p[u]=p[u]+p[v];</span><br><span class="line">            p[v]=u;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p[v]=p[v]+p[u];</span><br><span class="line">            p[u]=v;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u=root(x);</span><br><span class="line">    <span class="keyword">int</span> v=root(y);</span><br><span class="line">    <span class="keyword">if</span>(u!=v)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]&lt;<span class="number">0</span>)t++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(t==<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">pef a[<span class="number">100001</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(pef x,pef y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.m&lt;y.m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(p,<span class="number">-1</span>,<span class="number">400004</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i].x&gt;&gt;a[i].y&gt;&gt;a[i].m;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+m,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> xa=a[i].x,ya=a[i].y;</span><br><span class="line">         <span class="keyword">int</span> money=a[i].m;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(!is(xa,ya))</span><br><span class="line">        &#123;</span><br><span class="line">            ans=ans+money;</span><br><span class="line">            Merge(xa,ya);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(check())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;money;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此题可以顺带手撸掉模板最小生成树…<br>bye~ </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;天啊撸，又双叒叕的来的还是我…&lt;/p&gt;
    
    </summary>
    
      <category term="洛谷题解" scheme="http://smallfang.tk/categories/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="并查集" scheme="http://smallfang.tk/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>洛谷题解-P2058-海港</title>
    <link href="http://smallfang.tk/2018/12/14/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3-P2058-%E6%B5%B7%E6%B8%AF/"/>
    <id>http://smallfang.tk/2018/12/14/洛谷题解-P2058-海港/</id>
    <published>2018-12-14T14:12:32.000Z</published>
    <updated>2018-12-14T14:36:09.724Z</updated>
    
    <content type="html"><![CDATA[<p>LG - P2058 - 海港</p><a id="more"></a><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><a href="https://www.luogu.org/problemnew/show/P1077" target="_blank" rel="noopener">这里</a></p><hr><h1 id="思路部分"><a href="#思路部分" class="headerlink" title="思路部分"></a>思路部分</h1><p>这道题乍一看是一道<del>大难题</del>大模拟</p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p> 维护一个队列(不使用库函数)<br> 叫做dl</p><p> dl[i].ti意思是第i个人在什么时候到达</p><p> dl[i].ni意思是第i个人的国籍</p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p> 输入国籍，定义pep,统计该国籍有没有人，如果没有那么ans++,并且pep[tmp]++;</p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p> 由于给定条件保证数据递增,所以就保证此时的队列是一个单调递增的。然后定义e=0,这样从队头扫到元素时间与该此到达时间差小于86400（不等于）如果不满足则e++并且删掉一个改国籍的人,如果该国籍此时没有人那么ans–;</p><h1 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> ti,na;</span><br><span class="line">&#125;dl[<span class="number">400000</span>];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> pep[<span class="number">400000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> t,k,c=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> e=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;t&gt;&gt;k;</span><br><span class="line">        <span class="keyword">int</span> tmp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=k;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;tmp;</span><br><span class="line">            dl[c+<span class="number">1</span>].ti=t;</span><br><span class="line">            dl[++c].na=tmp;</span><br><span class="line">            <span class="keyword">if</span>(!pep[tmp])</span><br><span class="line">            &#123;</span><br><span class="line">                ans++;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            pep[tmp]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(t-dl[e].ti&gt;=<span class="number">86400</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(!--pep[dl[e++].na])</span><br><span class="line">            ans--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><del>题解终于写完了</del></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;LG - P2058 - 海港&lt;/p&gt;
    
    </summary>
    
      <category term="洛谷题解" scheme="http://smallfang.tk/categories/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="模拟" scheme="http://smallfang.tk/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>flag?</title>
    <link href="http://smallfang.tk/2018/12/09/flag/"/>
    <id>http://smallfang.tk/2018/12/09/flag/</id>
    <published>2018-12-09T13:02:47.000Z</published>
    <updated>2018-12-14T14:40:57.525Z</updated>
    
    <content type="html"><![CDATA[<p>1<br><a id="more"></a><br>1.推出v0.3 未达成<br>2.Ac 200道题 √ ff</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1&lt;br&gt;
    
    </summary>
    
    
      <category term="flag" scheme="http://smallfang.tk/tags/flag/"/>
    
  </entry>
  
  <entry>
    <title>博客更新日志</title>
    <link href="http://smallfang.tk/2018/12/08/%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/"/>
    <id>http://smallfang.tk/2018/12/08/博客更新日志/</id>
    <published>2018-12-08T14:13:28.000Z</published>
    <updated>2018-12-22T14:36:23.482Z</updated>
    
    <content type="html"><![CDATA[<h1 id="V0-2-1"><a href="#V0-2-1" class="headerlink" title="V0.2.1"></a>V0.2.1</h1><a id="more"></a><ul><li>2018.12.20</li><li>(+)鼠标样式</li></ul><h1 id="V0-2-0"><a href="#V0-2-0" class="headerlink" title="V0.2.0"></a>V0.2.0</h1><ul><li>2018.12.18</li><li>(+)评论功能</li><li>(+)站内搜索功能</li><li>(+)背景样式</li><li>(+)增加加载条</li></ul><h1 id="V0-1-0"><a href="#V0-1-0" class="headerlink" title="V0.1.0"></a>V0.1.0</h1><ul><li>基础</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;V0-2-1&quot;&gt;&lt;a href=&quot;#V0-2-1&quot; class=&quot;headerlink&quot; title=&quot;V0.2.1&quot;&gt;&lt;/a&gt;V0.2.1&lt;/h1&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://smallfang.tk/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>洛谷题解-AT2281-Sum of Three Integers</title>
    <link href="http://smallfang.tk/2018/12/06/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3-AT2281-Sum-of-Three-Integers/"/>
    <id>http://smallfang.tk/2018/12/06/洛谷题解-AT2281-Sum-of-Three-Integers/</id>
    <published>2018-12-06T12:25:07.000Z</published>
    <updated>2018-12-13T14:08:29.951Z</updated>
    
    <content type="html"><![CDATA[<p>1234</p><a id="more"></a><p>嘿嘿嘿,做红题的感觉真不错</p><h1 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h1><p>这道题就是求a+b+c=s有几种等式成立的可能性</p><p>0&lt;=a,b,c&lt;=k</p><p>给定s,k;</p><p>求出方案数.</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><h2 id="暴力n-3"><a href="#暴力n-3" class="headerlink" title="暴力n^3"></a>暴力n^3</h2><p>对,看到是红题就认为暴力n^3能过，然后就凉了…</p><p>下面是代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int k,s;</span><br><span class="line">    cin&gt;&gt;k&gt;&gt;s;</span><br><span class="line">    int ans=0;</span><br><span class="line">    for(int i=0;i&lt;=k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(int j=0;j&lt;=k;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            for(int ij=0;ij&lt;=k;ij++)</span><br><span class="line">            &#123;</span><br><span class="line">                if(i+j+ij==s)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="n-2-算法"><a href="#n-2-算法" class="headerlink" title="$n^2$算法"></a>$n^2$算法</h2><p>em…</p><p>可以写两个循环求出第3个值。如果第三个值符合要求，则答案++,下面是AC代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int k,s;</span><br><span class="line">cin&gt;&gt;k&gt;&gt;s;</span><br><span class="line">int ans=0;</span><br><span class="line">for(int i=0;i&lt;=k;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(int j=0;j&lt;=k;j++)</span><br><span class="line">&#123;</span><br><span class="line">int ij=s-i-j;</span><br><span class="line">if(ij&lt;=k &amp;&amp; ij &gt;=0)ans++;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      1234
    
    </summary>
    
      <category term="洛谷题解" scheme="http://smallfang.tk/categories/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="题解" scheme="http://smallfang.tk/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解-NOIP2018T4对称二叉树</title>
    <link href="http://smallfang.tk/2018/12/01/%E9%A2%98%E8%A7%A3-NOIP2018T4%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://smallfang.tk/2018/12/01/题解-NOIP2018T4对称二叉树/</id>
    <published>2018-12-01T07:01:46.000Z</published>
    <updated>2018-12-23T13:54:45.349Z</updated>
    
    <content type="html"><![CDATA[<p>2333</p><a id="more"></a><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>应该都知道</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#define ull unsigned long long</span><br><span class="line">using namespace std;</span><br><span class="line">int ans=1,n,v[1000005],l[1000005],r[10000005]; </span><br><span class="line">struct node&#123;</span><br><span class="line">    int d;</span><br><span class="line">    int t;</span><br><span class="line">    int w;</span><br><span class="line">    node(int da,int ta,int tw)</span><br><span class="line">    &#123;</span><br><span class="line">    d=da;</span><br><span class="line">    t=ta;</span><br><span class="line">    w=tw;</span><br><span class="line">    &#125;</span><br><span class="line">    bool operator==(const node&amp;b)const&#123;return d==b.d&amp;&amp;w==b.w&amp;&amp;t==b.t;&#125;</span><br><span class="line">&#125;; </span><br><span class="line">ull id(int x,int *l1,int *r1,ull h)</span><br><span class="line">&#123;</span><br><span class="line">if(l1[x]&gt;0) h=id(l1[x],l1,r1,h*1009+1);  </span><br><span class="line">if(r1[x]&gt;0) h=id(r1[x],l1,r1,h*1009+2);</span><br><span class="line">return h*1009+v[x];</span><br><span class="line">&#125;</span><br><span class="line">node dfs(int x)</span><br><span class="line">&#123;</span><br><span class="line">    if(x&lt;0)return node(0,0,0);</span><br><span class="line">    node ll=dfs(l[x]);</span><br><span class="line">    node rr=dfs(r[x]);</span><br><span class="line">    if(ll==rr&amp;&amp;l[x]&gt;0&amp;&amp;id(l[x],l,r,0)==id(r[x],r,l,0))</span><br><span class="line">        ans=max(ans,2*ll.t+1);</span><br><span class="line">    return node(max(ll.d,rr.d)+1,ll.t+rr.t+1,ll.w+rr.w+v[x]);</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)cin&gt;&gt;v[i];</span><br><span class="line">    for(int i=1;i&lt;=n;i++)cin&gt;&gt;l[i]&gt;&gt;r[i];</span><br><span class="line">    dfs(1);</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2333&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://smallfang.tk/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
</feed>
